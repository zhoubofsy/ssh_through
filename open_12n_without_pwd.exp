#!/usr/bin/expect

set timeout 60
set password [lindex $argv 2] 
set username [lindex $argv 1]
set target [lindex $argv 0]
set localuser [lindex $argv 3]

if {$argc != 4} {
    send_user "Input Params Error!\n"
    exit
}
send $password
send "\n"
send $username
send "\n"
send $target
send "\n"


# homepath
if {$username == "root"} {
    set homepath /root
} else {
    set homepath /home/$username
}
if {$localuser == "root"} {
    set localhomepath /root
} else {
    set localhomepath /home/$localuser
}
send_user "$homepath\n"
send_user "$localhomepath\n"

# backup target authorized_keys
spawn ssh $username@$target touch $homepath/.ssh/authorized_keys_bk
expect {
    "password:" {
        send "$password\n"
        exp_continue
    }
}
spawn ssh $username@$target cp -f $homepath/.ssh/authorized_keys $homepath/.ssh/authorized_keys_bk
expect {
    "password:" {
        send "$password\n"
        exp_continue
    }
}

# append public key to authorized_keys
spawn scp $localhomepath/.ssh/id_rsa.pub $username@$target:$homepath/.ssh/id_rsa.pub.temp
expect {
    "password:" {
        send "$password\n"
        exp_continue
    }
}
spawn ssh $username@$target tee -a $homepath/.ssh/authorized_keys < $homepath/.ssh/id_rsa.pub.temp
expect {
    "password:" {
        send "$password\n"
        exp_continue
    }
}
spawn ssh $username@$target rm -vf $homepath/.ssh/id_rsa.pub.temp
expect {
    "password:" {
        send "$password\n"
        exp_continue
    }
}

